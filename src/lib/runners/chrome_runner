#!/usr/bin/env node
'use strict';
require('babel-polyfill');

(async function run(...args) {
  const http = require('http');
  const puppeteer = require('puppeteer');
  const run = require('./chrome_evaluate');

  const [,,port = 8888, query] = args;
  const {STREAM_PORT = 8889, WITH_SANDBOX = 'false'} = process.env;
  let url = `http://localhost:${port}/consoleRunner`;
  if (query) url += `/?${query}`;

  let server;

  try {
    server = http.createServer((req, res) => {
      const chunks = [];
      req.on('data', chunk => chunks.push(chunk));
      req.on('end', () => {
        console.error(Buffer.concat(chunks).toString());
        res.writeHead(200);
        res.end();
      });
    });
    server.listen(STREAM_PORT);

    let browser;
    try {
      const args = [];
      if (!JSON.parse(WITH_SANDBOX)) args.push('--no-sandbox');
      browser = await puppeteer.launch({args});
      const page = await browser.newPage();
      await page.on('console', ({args}) => {
        console.error(JSON.stringify({id: ':consoleMessage', message: args.join('\n')}));
      });

      await page.goto(url);
      await page.evaluate(run, STREAM_PORT);
    } finally {
      browser && browser.close();
    }
  } finally {
    server.close();
  }
})(...process.argv);
